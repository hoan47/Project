<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAXIAAACqCAYAAACwPsT/AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABoNJREFUeF7t2j9olHkex/HxkiCZMQNGbCxstLbRIIgY7CyvErY7OFKKLIsI14oW
        i4iFWByCoGBQC0117TbbbHf1jSMrrJDCQLz4hyQzzzrxiZl8Z/ayF0hmvsPrBZ8i4y+NP5434UkqRVFs
        7MWLF3+dnZ39qVarrVQqlcLMzIZvk5OTH2dmZn558ODB39vt9oFOvzcifu3atR/7fYOZmQ3vLl++/LTV
        av1l4yfxfgfMzGz4d+fOne8rndcpmx9MTEwUN27cKN68efPlB3UAhsni4mJx//79Ympq6lvIjx8//mvl
        0KFD/9384NatW+VxAIbV/Pz8t5CX2/ri7du35bGvFhYWiosXLxZfYt/9DbaHq9VqxYULF4rnz5+XtwCw
        3fr6euzyVkS6Xb9+vfuQDWBXr14tbwNguxMnTnT3Yiscm16+fNl9wAa4p0+flrcCsGXHkM/OznYfsAHu
        7Nmz5a0AbNkx5N6JD886f0nUarXKmwH4aseQd39mg9+HDx/KmwH4SsiTTciBSMiTTciBSMiTTciBSMiT
        TciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiT
        TciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiT
        TciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTrV/I6/V6MTY2ZmYjvFevXpVPfC8hT7Z+
        Ia9Wq33PmtnorNFolE98LyFPtn4hX1tbK1ZXV81shPe/CHmyeUcOREKebEIOREKebEIOREKebEIOREKe
        bEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKe
        bEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKebEIOREKe
        bEIOREKebEIOREKebEIOREKebP1CPj09XRw8eNDMRnjNZrN84nsJebL1C3m1Wu171sxGZ41Go3ziewl5
        svUL+efPn4tPnz6Z2Qiv3W6XT3wvIU8278iBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiT
        TciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiT
        TciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiTTciBSMiT
        TciBaMeQ12q17gM2wE1MTBStVqu8mS1Hjx4tqtWqmY3wms1m+cT32jHk58+f7z5gA9yZM2fKW9muc8n9
        zpvZ6KzRaJRPfK8dQ/7s2bPuAzbAPX78uLyV7TqvW1ZWVsxshNdut8snvteOIe+4cuVK9yEbwObm5srb
        ANjuT4W8Y35+vpiZmSnGx8e7v8H2cGNjY8Xp06eLR48elbcA0OtPh3xT55dtS0tLtg9bX18v/9cB/tj/
        HXIAhouQAyQn5ADJCTlAckIOkJyQAyQn5ADJCTlAckIOkJyQAyQn5ADJCTlAckIOkJyQAyQn5ADJCTlA
        ckIOkJyQAyQn5ADJCTlAckIOkJyQAyQn5ADJCTlAcrsKeb1eL6ampszMbJ/WbDbLAvfaVci7z5mZ2d6v
        0WiUBe61q5C/f/++WF5eNjOzfVq73S4L3Ms7coDkhBwgOSEHSE7IAZITcoDkhBwgOSEHSE7IAZITcoDk
        hBwgOSEHSE7IAZITcoDkhBwgOSEHSE7IAZITcoDkhBwgOSEHSE7IAZITcoDkhBwgOSEHSE7IAZITcoDk
        hBwgOSEHSG5XIZ+eni4OHz5sZmb7tNevX5cF7rWrkHefMzOzvV+j0SgL3GtXIV9aWirevXtnZmb7tFar
        VRa4l3fkAMn9YcgXFxfLIwAMq85P6vV6fSvktVptZfOLu3fvlscAGFYLCwtbEe/s3LlzP29+MTk5Wdy7
        d69YXl4ujwMwLD5+/Fg8efKkOHLkyLeIHzt27LfKlw+/2/xgcwcOHOj7pzBmZja4jY+Pb2t1Zzdv3vxH
        5zeclbm5uX/GfzQzs+HepUuX/rW6ujqxEfLOHj58+LdTp079u99hMzMbnp08efI/t2/f/mFtbW28KIrK
        7zo/0UVtBHRnAAAAAElFTkSuQmCC
</value>
  </data>
</root>